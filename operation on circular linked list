#include <bits/stdc++.h>
struct node
{
  int data;
  struct node *next;
}*first = NULL;
void create(int a[] , int n)
{
  struct node *last, *t;
  first = (struct node*)malloc(sizeof(struct node));
  first->data = a[0];
  first->next = first;
  last = first;
  for (int i = 1 ; i < n ; i++)
  {
    t = (struct node*)malloc(sizeof(struct node));
    t->data = a[i];
    t->next = last->next;
    last->next = t;
    last =  t;
  }
}
int count(struct node *p)
{
    int c = 0 ;
    do
    {
        c++;
        p = p->next;
    }while(p!=first);
    return c;
}
int insert(struct node *p , int key , int pos)
{
    struct node *t;
    if(pos < 0 || pos > count(p))
    {
        return 0;
    }
    t = (struct node*)malloc(sizeof(struct node));
    t->data = key;
    if(pos == 0)
    {
        if(first == NULL)
        {
            first = t;
            first->next = first;
        }
        else
        {
            while(p->next!= first)
            {
              p = p->next;
            }
            p->next = t;
            t->next = first;
            first = t;
        }
    }
    else
    {
        for(int i = 0 ; i < pos - 1 ;i++)
        {
            p = p->next;
        }
        t->next = p->next;
        p->next = t;
    }
}
void Delete(struct node *p , int pos)
{
    struct node *q;
    if(pos < 0 || pos > count(p))
    {
        return;
    }
    else
    {
        if(pos == 1)
        {
            while(p->next != first)
            {
                p = p->next;
            }
            if(first == p)
            {
                free(first);
                first = NULL;
            }
            else
            {
                q = first;
                first = first->next;
                p->next = first;
                free(q);
            }
        }
        else
        {
            for(int i = 0 ;i < pos - 1 ; i++)
            {
                q = p;
                p = p->next;
            }
            q->next = p->next;
            free(p);
        }
    }
}
void display(struct node *p)
{
  do
  {
    printf("%d ", p->data);
    p = p->next;
  } while (p != first);
}
int main(int argc, char const *argv[])
{
  int a[] = {1, 8, 6, 3, 4};
  create(a, 5);
  Delete(first ,5);
  display(first);
  return 0;
}
